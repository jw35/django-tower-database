# Generated by Django 5.2.6 on 2025-09-18 17:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('publish', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMeans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(max_length=50)),
                ('contact_value', models.CharField(max_length=200)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.entity')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('TCor', 'Tower Corespondent'), ('TC', 'Tower Captain'), ('RM', 'Ringing Master'), ('SK', 'Steeplekeeper')], max_length=30)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.entity')),
            ],
            options={
                'ordering': ['tower', 'role'],
            },
        ),
        migrations.CreateModel(
            name='Tower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('dedication', models.CharField(help_text='‘St’, not ‘St.’; ‘and’ not ‘&’', max_length=100)),
                ('full_dedication', models.CharField(blank=True, max_length=100)),
                ('nickname', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(choices=[('C', 'Cambridge'), ('E', 'Ely'), ('H', 'Huntingdon'), ('W', 'Wisbech')], max_length=10)),
                ('include_dedication', models.BooleanField(default=False, help_text='needed for places with more than one tower [Cambridge], or for towers in different places that have the same name [Chesterton])')),
                ('ringing', models.CharField(choices=[('R', 'Regular'), ('O', 'Occasional'), ('N', 'None')], max_length=20)),
                ('report', models.BooleanField(default=False, help_text='included in the annual report?')),
                ('service', models.CharField(help_text='Short description of normal service ringing. No initial capital (unless day of week)', max_length=200)),
                ('practice', models.CharField(help_text='Short description of normal practice ringing. No initial capital (unless day of week)', max_length=200)),
                ('day', models.CharField(help_text='Day of the week of main practice', max_length=9)),
                ('week', models.CharField(help_text="Week(s) of the month for main practice if not all [‘2nd, 5th’, 'alt']", max_length=50)),
                ('check_before_traveling', models.BooleanField(default=False, help_text='Check before travelling to practices')),
                ('bells', models.IntegerField(help_text='Number of ringable bells')),
                ('ring_type', models.CharField(choices=[('Full-circle', 'Full-circle ring'), ('Lightweight', 'Lightweight ring'), ('Carillon', 'Carillon'), ('C-Chine', 'Clock chime'), ('T-Chime', 'Tubular chime'), ('H-Chinme', 'Hemispherical chime'), ('Chime', 'Chime'), ('Display', 'Display bells'), ('Future', 'Future ring'), ('Other', 'Other bells')], max_length=20)),
                ('weight', models.CharField(help_text='‘15-3-13’, ‘6cwt’', max_length=50)),
                ('note', models.CharField(help_text='Use ‘b’ and ‘#’', max_length=10)),
                ('gf', models.BooleanField(default=False, help_text='Ground Floor?')),
                ('os_grid', models.CharField(max_length=8)),
                ('postcode', models.CharField(max_length=10)),
                ('lat', models.DecimalField(decimal_places=3, max_digits=5)),
                ('lng', models.DecimalField(decimal_places=3, max_digits=5)),
                ('website', models.URLField()),
                ('peals', models.IntegerField()),
                ('dove_tower_id', models.CharField(max_length=10)),
                ('dove_ring_id', models.CharField(max_length=10)),
                ('towerbase_id', models.CharField(max_length=10)),
                ('notes', models.CharField(help_text='For display, especially in the Annual Report', max_length=100)),
                ('long_Notes', models.TextField(help_text='For display when space isn’t at a premium')),
                ('maintainer_notes', models.TextField()),
                ('other_contacts', models.ManyToManyField(related_name='tower_oher_set', through='database.Contact', to='database.entity')),
                ('primary_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tower_primary_set', to='database.entity')),
            ],
            options={
                'ordering': ['place', 'dedication'],
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='tower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.tower'),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('tower', 'entity')},
        ),
    ]
